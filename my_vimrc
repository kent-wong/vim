let mapleader=','

nnoremap gl f(l
nnoremap gL F(l
nnoremap g; f)

vnoremap gl f(l
vnoremap gL F(l
vnoremap g; f)

nnoremap <leader>e $
nnoremap <leader>b ^
vnoremap <leader>e $
vnoremap <leader>b ^

nnoremap <leader><space> f=w
vnoremap <leader><space> f=w

nnoremap <leader>, f,w
vnoremap <leader>, f,w

nnoremap <leader>( Bi(<esc>miEa)<esc>`i
nnoremap <leader>) Ea)<esc>Bi(<esc>

nnoremap <silent> gn /\d\+<cr>
nnoremap <silent> gN ?\d\+<cr>

nnoremap <F5> :w<cr>:!python %<cr>
nnoremap <c-m> :w<cr>:!node %<cr>
nnoremap <c-c> :w<cr>:!gcc  %<cr>
nnoremap <c-x> :w<cr>:!gcc % && ./a.out<cr>

nnoremap dI dt)
nnoremap cI ct)

noremap <silent> <c-n>	  <esc>:tabnew<cr>
noremap <silent> <c-tab> <esc>:tabnext<cr>

iabbrev cons console.log();<esc>hh
iabbrev foro for (let v of) {<CR>}<ESC>gkf)i
iabbrev fori for (let i = 0; i <; i ++) {<CR>}<ESC>gkf;;i

set nobackup
set autoindent
set smartindent
set nohls
color darkblue
set expandtab
set sw=4
set ts=4
set guifont=Consolas:h16:cANSI
filetype plugin indent on

if has("cscope")
	set csprg=/usr/bin/cscope
	set csto=0
	set cst
	set nocsverb

	if filereadable("cscope.out")
		cs add cscope.out
	elseif $CSCOPE_DB != ""
		cs add $CSCOPE_DB
	endif
	set csverb
endif

nnoremap <c-]> :cs find g <C-R><C-W><CR>zz
nnoremap <leader>g :cs find g <C-R><C-W><CR>zz
nnoremap <leader>f :cs find s <C-R><C-W><CR>
